3CeAM = Find the beginning of the client job ID system convert and select that, and all the data that gives the name of the job.
Then replace it with this...

/*==========================================
 * Convert's from the client's lame Job ID system
 * to the map server's 'makes sense' system. [Skotlex]
 *------------------------------------------*/
int pc_jobid2mapid(unsigned short b_class)
{
	int class_ = 0;
	if (b_class >= JOB_BABY && b_class <= JOB_SUPER_BABY)
	{
		if (b_class == JOB_SUPER_BABY)
			b_class = JOB_SUPER_NOVICE;
		else
			b_class -= JOB_BABY;
		class_|= JOBL_BABY;
	}
	else if (b_class >= JOB_NOVICE_HIGH && b_class <= JOB_PALADIN2)
	{
		b_class -= JOB_NOVICE_HIGH;
		class_|= JOBL_UPPER;
	}
	if (b_class >= JOB_KNIGHT && b_class <= JOB_KNIGHT2)
		class_|= JOBL_2_1;
	else if (b_class >= JOB_CRUSADER && b_class <= JOB_CRUSADER2)
		class_|= JOBL_2_2;

	if (b_class >= JOB_RUNE_KNIGHT && b_class <= JOB_GUILLOTINE_CROSS)
		class_|= JOBL_3_1;
	else if (b_class >= JOB_ROYAL_GUARD && b_class <= JOB_SHADOW_CHASER)
		class_|= JOBL_3_2;

	switch (b_class)
	{
		case JOB_NOVICE:
		case JOB_SWORDMAN:
		case JOB_MAGE:
		case JOB_ARCHER:
		case JOB_ACOLYTE:
		case JOB_MERCHANT:
		case JOB_THIEF:
			class_ |= b_class;
			break;
		case JOB_KNIGHT:
		case JOB_KNIGHT2:
		case JOB_CRUSADER:
		case JOB_CRUSADER2:
			class_ |= MAPID_SWORDMAN;
			break;
		case JOB_PRIEST:
		case JOB_MONK:
			class_ |= MAPID_ACOLYTE;
			break;
		case JOB_WIZARD:
		case JOB_SAGE:
			class_ |= MAPID_MAGE;
			break;
		case JOB_BLACKSMITH:
		case JOB_ALCHEMIST:
			class_ |= MAPID_MERCHANT;
			break;
		case JOB_HUNTER:
		case JOB_BARD:
		case JOB_DANCER:
			class_ |= MAPID_ARCHER;
			break;
		case JOB_ASSASSIN:
		case JOB_ROGUE:
			class_ |= MAPID_THIEF;
			break;
			
		case JOB_STAR_GLADIATOR:
		case JOB_STAR_GLADIATOR2:
			class_ |= JOBL_2_1;
			class_ |= MAPID_TAEKWON;
			break;	
		case JOB_SOUL_LINKER:
			class_ |= JOBL_2_2;
		case JOB_TAEKWON:
			class_ |= MAPID_TAEKWON;
			break;
		case JOB_WEDDING:
			class_ = MAPID_WEDDING;
			break;
		case JOB_SUPER_NOVICE: //Super Novices are considered 2-1 novices. [Skotlex]
			class_ |= JOBL_2_1;
			break;
		case JOB_GUNSLINGER:
			class_ |= MAPID_GUNSLINGER;
			break;
		case JOB_NINJA:
			class_ |= MAPID_NINJA;
			break;
		case JOB_XMAS:
			class_ = MAPID_XMAS;
			break;
		case JOB_SUMMER:
			class_ = MAPID_SUMMER;
			break;

		case JOB_GANGSI:
			class_ |= MAPID_GANGSI;
			break;
		case JOB_DEATH_KNIGHT:
			class_ |= JOBL_2_1;
			class_ |= MAPID_GANGSI;
			break;
		case JOB_DARK_COLLECTOR:
			class_ |= JOBL_2_2;
			class_ |= MAPID_GANGSI;
			break;

		default:
			return -1;
	}
	return class_;
}

//Reverts the map-style class id to the client-style one.
int pc_mapid2jobid(unsigned short class_, int sex)
{
	switch(class_) {
	// Base 1st Class
		case MAPID_NOVICE:             return JOB_NOVICE;
		case MAPID_SWORDMAN:           return JOB_SWORDMAN;
		case MAPID_MAGE:               return JOB_MAGE;
		case MAPID_ARCHER:             return JOB_ARCHER;
		case MAPID_ACOLYTE:            return JOB_ACOLYTE;
		case MAPID_MERCHANT:           return JOB_MERCHANT;
		case MAPID_THIEF:              return JOB_THIEF;
		case MAPID_TAEKWON:            return JOB_TAEKWON;
		case MAPID_WEDDING:            return JOB_WEDDING;
		case MAPID_GUNSLINGER:         return JOB_GUNSLINGER;
		case MAPID_NINJA:              return JOB_NINJA;
		case MAPID_XMAS:               return JOB_XMAS;
		case MAPID_SUMMER:             return JOB_SUMMER;
		case MAPID_GANGSI:             return JOB_GANGSI;
	// Base 2nd Class 2-1
		case MAPID_SUPER_NOVICE:       return JOB_SUPER_NOVICE;
		case MAPID_KNIGHT:             return JOB_KNIGHT;
		case MAPID_WIZARD:             return JOB_WIZARD;
		case MAPID_HUNTER:             return JOB_HUNTER;
		case MAPID_PRIEST:             return JOB_PRIEST;
		case MAPID_BLACKSMITH:         return JOB_BLACKSMITH;
		case MAPID_ASSASSIN:           return JOB_ASSASSIN;
		case MAPID_STAR_GLADIATOR:     return JOB_STAR_GLADIATOR;
		case MAPID_DEATH_KNIGHT:       return JOB_DEATH_KNIGHT;
	// Base 2nd Class 2-2
		case MAPID_CRUSADER:           return JOB_CRUSADER;
		case MAPID_SAGE:               return JOB_SAGE;
		case MAPID_BARDDANCER:         return sex?JOB_BARD:JOB_DANCER;
		case MAPID_MONK:               return JOB_MONK;
		case MAPID_ALCHEMIST:          return JOB_ALCHEMIST;
		case MAPID_ROGUE:              return JOB_ROGUE;
		case MAPID_SOUL_LINKER:        return JOB_SOUL_LINKER;
		case MAPID_DARK_COLLECTOR:     return JOB_DARK_COLLECTOR;
	// Trans 1st Class
		case MAPID_NOVICE_HIGH:        return JOB_NOVICE_HIGH;
		case MAPID_SWORDMAN_HIGH:      return JOB_SWORDMAN_HIGH;
		case MAPID_MAGE_HIGH:          return JOB_MAGE_HIGH;
		case MAPID_ARCHER_HIGH:        return JOB_ARCHER_HIGH;
		case MAPID_ACOLYTE_HIGH:       return JOB_ACOLYTE_HIGH;
		case MAPID_MERCHANT_HIGH:      return JOB_MERCHANT_HIGH;
		case MAPID_THIEF_HIGH:         return JOB_THIEF_HIGH;
	// Trans 2nd Class 2-1
		case MAPID_LORD_KNIGHT:        return JOB_LORD_KNIGHT;
		case MAPID_HIGH_WIZARD:        return JOB_HIGH_WIZARD;
		case MAPID_SNIPER:             return JOB_SNIPER;
		case MAPID_HIGH_PRIEST:        return JOB_HIGH_PRIEST;
		case MAPID_WHITESMITH:         return JOB_WHITESMITH;
		case MAPID_ASSASSIN_CROSS:     return JOB_ASSASSIN_CROSS;
	// Trans 2nd Class 2-2
		case MAPID_PALADIN:            return JOB_PALADIN;
		case MAPID_PROFESSOR:          return JOB_PROFESSOR;
		case MAPID_CLOWNGYPSY:         return sex?JOB_CLOWN:JOB_GYPSY;
		case MAPID_CHAMPION:           return JOB_CHAMPION;
		case MAPID_CREATOR:            return JOB_CREATOR;
		case MAPID_STALKER:            return JOB_STALKER;
	// Baby 1st Class
		case MAPID_BABY:               return JOB_BABY;
		case MAPID_BABY_SWORDMAN:      return JOB_BABY_SWORDMAN;
		case MAPID_BABY_MAGE:          return JOB_BABY_MAGE;
		case MAPID_BABY_ARCHER:        return JOB_BABY_ARCHER;
		case MAPID_BABY_ACOLYTE:       return JOB_BABY_ACOLYTE;
		case MAPID_BABY_MERCHANT:      return JOB_BABY_MERCHANT;
		case MAPID_BABY_THIEF:         return JOB_BABY_THIEF;
	// Baby 2nd Class 2-1
		case MAPID_SUPER_BABY:         return JOB_SUPER_BABY;
		case MAPID_BABY_KNIGHT:        return JOB_BABY_KNIGHT;
		case MAPID_BABY_WIZARD:        return JOB_BABY_WIZARD;
		case MAPID_BABY_HUNTER:        return JOB_BABY_HUNTER;
		case MAPID_BABY_PRIEST:        return JOB_BABY_PRIEST;
		case MAPID_BABY_BLACKSMITH:    return JOB_BABY_BLACKSMITH;
		case MAPID_BABY_ASSASSIN:      return JOB_BABY_ASSASSIN;
	// Baby 2nd Class 2-2
		case MAPID_BABY_CRUSADER:      return JOB_BABY_CRUSADER;
		case MAPID_BABY_SAGE:          return JOB_BABY_SAGE;
		case MAPID_BABY_BARDDANCER:    return sex?JOB_BABY_BARD:JOB_BABY_DANCER;
		case MAPID_BABY_MONK:          return JOB_BABY_MONK;
		case MAPID_BABY_ALCHEMIST:     return JOB_BABY_ALCHEMIST;
		case MAPID_BABY_ROGUE:         return JOB_BABY_ROGUE;
	// Base 2nd to 3rd 3-1
		case MAPID_RUNE_KNIGHT:        return JOB_RUNE_KNIGHT;
		case MAPID_WARLOCK:            return JOB_WARLOCK;
		case MAPID_RANGER:             return JOB_RANGER;
		case MAPID_ARCH_BISHOP:        return JOB_ARCH_BISHOP;
		case MAPID_MECHANIC:           return JOB_MECHANIC;
		case MAPID_GUILLOTINE_CROSS:   return JOB_GUILLOTINE_CROSS;
	// Trans 2nd to 3rd 3-1
		case MAPID_RUNE_KNIGHT_T:      return JOB_RUNE_KNIGHT_T;
		case MAPID_WARLOCK_T:          return JOB_WARLOCK_T;
		case MAPID_RANGER_T:           return JOB_RANGER_T;
		case MAPID_ARCH_BISHOP_T:      return JOB_ARCH_BISHOP_T;
		case MAPID_MECHANIC_T:         return JOB_MECHANIC_T;
		case MAPID_GUILLOTINE_CROSS_T: return JOB_GUILLOTINE_CROSS_T;
	// Base 2nd to 3rd 3-2
		case MAPID_ROYAL_GUARD:        return JOB_ROYAL_GUARD;
		case MAPID_SORCERER:           return JOB_SORCERER;
		case MAPID_MINSTRELWANDERER:   return sex?JOB_MINSTREL:JOB_WANDERER;
		case MAPID_SURA:               return JOB_SURA;
		case MAPID_GENETIC:            return JOB_GENETIC;
		case MAPID_SHADOW_CHASER:      return JOB_SHADOW_CHASER;
	// Trans 2nd to 3rd 3-2
		case MAPID_ROYAL_GUARD_T:      return JOB_ROYAL_GUARD_T;
		case MAPID_SORCERER_T:         return JOB_SORCERER_T;
		case MAPID_MINSTRELWANDERER_T: return sex?JOB_MINSTREL_T:JOB_WANDERER_T;
		case MAPID_SURA_T:             return JOB_SURA_T;
		case MAPID_GENETIC_T:          return JOB_GENETIC_T;
		case MAPID_SHADOW_CHASER_T:    return JOB_SHADOW_CHASER_T;
		default:
			return -1;
	}
}

/*====================================================
 * This function return the name of the job (by [Yor])
 *----------------------------------------------------*/
char* job_name(int class_)
{
	switch (class_) {
	case JOB_NOVICE:
	case JOB_SWORDMAN:
	case JOB_MAGE:
	case JOB_ARCHER:
	case JOB_ACOLYTE:
	case JOB_MERCHANT:
	case JOB_THIEF:
		return msg_txt(550 - JOB_NOVICE+class_);
		
	case JOB_KNIGHT:
	case JOB_PRIEST:
	case JOB_WIZARD:
	case JOB_BLACKSMITH:
	case JOB_HUNTER:
	case JOB_ASSASSIN:
		return msg_txt(557 - JOB_KNIGHT+class_);
		
	case JOB_KNIGHT2:
		return msg_txt(557);
		
	case JOB_CRUSADER:
	case JOB_MONK:
	case JOB_SAGE:
	case JOB_ROGUE:
	case JOB_ALCHEMIST:
	case JOB_BARD:
	case JOB_DANCER:
		return msg_txt(563 - JOB_CRUSADER+class_);
			
	case JOB_CRUSADER2:
		return msg_txt(563);
		
	case JOB_WEDDING:
	case JOB_SUPER_NOVICE:

	case JOB_XMAS:
		return msg_txt(570 - JOB_WEDDING+class_);

	case JOB_SUMMER:
		return msg_txt(621);

	case JOB_NOVICE_HIGH:
	case JOB_SWORDMAN_HIGH:
	case JOB_MAGE_HIGH:
	case JOB_ARCHER_HIGH:
	case JOB_ACOLYTE_HIGH:
	case JOB_MERCHANT_HIGH:
	case JOB_THIEF_HIGH:
		return msg_txt(575 - JOB_NOVICE_HIGH+class_);

	case JOB_LORD_KNIGHT:
	case JOB_HIGH_PRIEST:
	case JOB_HIGH_WIZARD:
	case JOB_WHITESMITH:
	case JOB_SNIPER:
	case JOB_ASSASSIN_CROSS:
		return msg_txt(582 - JOB_LORD_KNIGHT+class_);
		
	case JOB_LORD_KNIGHT2:
		return msg_txt(582);
		
	case JOB_PALADIN:
	case JOB_CHAMPION:
	case JOB_PROFESSOR:
	case JOB_STALKER:
	case JOB_CREATOR:
	case JOB_CLOWN:
	case JOB_GYPSY:
		return msg_txt(588 - JOB_PALADIN + class_);
		
	case JOB_PALADIN2:
		return msg_txt(588);

	case JOB_BABY:
	case JOB_BABY_SWORDMAN:
	case JOB_BABY_MAGE:
	case JOB_BABY_ARCHER:
	case JOB_BABY_ACOLYTE:
	case JOB_BABY_MERCHANT:
	case JOB_BABY_THIEF:
		return msg_txt(595 - JOB_BABY + class_);
		
	case JOB_BABY_KNIGHT:
	case JOB_BABY_PRIEST:
	case JOB_BABY_WIZARD:
	case JOB_BABY_BLACKSMITH:
	case JOB_BABY_HUNTER:
	case JOB_BABY_ASSASSIN:
		return msg_txt(602 - JOB_BABY_KNIGHT + class_);
		
	case JOB_BABY_KNIGHT2:
		return msg_txt(602);
		
	case JOB_BABY_CRUSADER:
	case JOB_BABY_MONK:
	case JOB_BABY_SAGE:
	case JOB_BABY_ROGUE:
	case JOB_BABY_ALCHEMIST:
	case JOB_BABY_BARD:
	case JOB_BABY_DANCER:
		return msg_txt(608 - JOB_BABY_CRUSADER +class_);
		
	case JOB_BABY_CRUSADER2:
		return msg_txt(608);
		
	case JOB_SUPER_BABY:
		return msg_txt(615);
		
	case JOB_TAEKWON:
		return msg_txt(616);
	case JOB_STAR_GLADIATOR:
	case JOB_STAR_GLADIATOR2:
		return msg_txt(617);
	case JOB_SOUL_LINKER:
		return msg_txt(618);
		
	case JOB_GUNSLINGER:
		return msg_txt(619);
	case JOB_NINJA:
		return msg_txt(620);

	case JOB_GANGSI:
	case JOB_DEATH_KNIGHT:
	case JOB_DARK_COLLECTOR:
		return msg_txt(622 - JOB_GANGSI+class_);

	case JOB_RUNE_KNIGHT:
	case JOB_WARLOCK:
	case JOB_RANGER:
	case JOB_ARCH_BISHOP:
	case JOB_MECHANIC:
	case JOB_GUILLOTINE_CROSS:
		return msg_txt(625 - JOB_RUNE_KNIGHT+class_);

	case JOB_RUNE_KNIGHT_T:
	case JOB_WARLOCK_T:
	case JOB_RANGER_T:
	case JOB_ARCH_BISHOP_T:
	case JOB_MECHANIC_T:
	case JOB_GUILLOTINE_CROSS_T:
		return msg_txt(625 - JOB_RUNE_KNIGHT_T+class_);

	case JOB_ROYAL_GUARD:
	case JOB_SORCERER:
	case JOB_MINSTREL:
	case JOB_WANDERER:
	case JOB_SURA:
	case JOB_GENETIC:
	case JOB_SHADOW_CHASER:
		return msg_txt(631 - JOB_ROYAL_GUARD+class_);

	case JOB_ROYAL_GUARD_T:
	case JOB_SORCERER_T:
	case JOB_MINSTREL_T:
	case JOB_WANDERER_T:
	case JOB_SURA_T:
	case JOB_GENETIC_T:
	case JOB_SHADOW_CHASER_T:
		return msg_txt(631 - JOB_ROYAL_GUARD_T+class_);

	case JOB_RUNE_KNIGHT2:
	case JOB_RUNE_KNIGHT_T2:
		return msg_txt(625);

	case JOB_ROYAL_GUARD2:
	case JOB_ROYAL_GUARD_T2:
		return msg_txt(631);

	case JOB_RANGER2:
	case JOB_RANGER_T2:
		return msg_txt(627);

	case JOB_MECHANIC2:
	case JOB_MECHANIC_T2:
		return msg_txt(629);
	
	default:
		return msg_txt(650);
	}
}